//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChallengeC3.webservice {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="webservice.WeSafeWebServiceSoap")]
    public interface WeSafeWebServiceSoap {
        
        // CODEGEN: Generating message contract since element name SESSION_ID from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecProcedure", ReplyAction="*")]
        ChallengeC3.webservice.ExecProcedureResponse ExecProcedure(ChallengeC3.webservice.ExecProcedureRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ExecProcedure", ReplyAction="*")]
        System.Threading.Tasks.Task<ChallengeC3.webservice.ExecProcedureResponse> ExecProcedureAsync(ChallengeC3.webservice.ExecProcedureRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecProcedureRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecProcedure", Namespace="http://tempuri.org/", Order=0)]
        public ChallengeC3.webservice.ExecProcedureRequestBody Body;
        
        public ExecProcedureRequest() {
        }
        
        public ExecProcedureRequest(ChallengeC3.webservice.ExecProcedureRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExecProcedureRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string SESSION_ID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ProcedureName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string Parameter;
        
        public ExecProcedureRequestBody() {
        }
        
        public ExecProcedureRequestBody(string SESSION_ID, string ProcedureName, string Parameter) {
            this.SESSION_ID = SESSION_ID;
            this.ProcedureName = ProcedureName;
            this.Parameter = Parameter;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ExecProcedureResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ExecProcedureResponse", Namespace="http://tempuri.org/", Order=0)]
        public ChallengeC3.webservice.ExecProcedureResponseBody Body;
        
        public ExecProcedureResponse() {
        }
        
        public ExecProcedureResponse(ChallengeC3.webservice.ExecProcedureResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class ExecProcedureResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string ExecProcedureResult;
        
        public ExecProcedureResponseBody() {
        }
        
        public ExecProcedureResponseBody(string ExecProcedureResult) {
            this.ExecProcedureResult = ExecProcedureResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WeSafeWebServiceSoapChannel : ChallengeC3.webservice.WeSafeWebServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WeSafeWebServiceSoapClient : System.ServiceModel.ClientBase<ChallengeC3.webservice.WeSafeWebServiceSoap>, ChallengeC3.webservice.WeSafeWebServiceSoap {
        
        public WeSafeWebServiceSoapClient() {
        }
        
        public WeSafeWebServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WeSafeWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeSafeWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WeSafeWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ChallengeC3.webservice.ExecProcedureResponse ChallengeC3.webservice.WeSafeWebServiceSoap.ExecProcedure(ChallengeC3.webservice.ExecProcedureRequest request) {
            return base.Channel.ExecProcedure(request);
        }
        
        public string ExecProcedure(string SESSION_ID, string ProcedureName, string Parameter) {
            ChallengeC3.webservice.ExecProcedureRequest inValue = new ChallengeC3.webservice.ExecProcedureRequest();
            inValue.Body = new ChallengeC3.webservice.ExecProcedureRequestBody();
            inValue.Body.SESSION_ID = SESSION_ID;
            inValue.Body.ProcedureName = ProcedureName;
            inValue.Body.Parameter = Parameter;
            ChallengeC3.webservice.ExecProcedureResponse retVal = ((ChallengeC3.webservice.WeSafeWebServiceSoap)(this)).ExecProcedure(inValue);
            return retVal.Body.ExecProcedureResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ChallengeC3.webservice.ExecProcedureResponse> ChallengeC3.webservice.WeSafeWebServiceSoap.ExecProcedureAsync(ChallengeC3.webservice.ExecProcedureRequest request) {
            return base.Channel.ExecProcedureAsync(request);
        }
        
        public System.Threading.Tasks.Task<ChallengeC3.webservice.ExecProcedureResponse> ExecProcedureAsync(string SESSION_ID, string ProcedureName, string Parameter) {
            ChallengeC3.webservice.ExecProcedureRequest inValue = new ChallengeC3.webservice.ExecProcedureRequest();
            inValue.Body = new ChallengeC3.webservice.ExecProcedureRequestBody();
            inValue.Body.SESSION_ID = SESSION_ID;
            inValue.Body.ProcedureName = ProcedureName;
            inValue.Body.Parameter = Parameter;
            return ((ChallengeC3.webservice.WeSafeWebServiceSoap)(this)).ExecProcedureAsync(inValue);
        }
    }
}
